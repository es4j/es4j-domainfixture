package com.lingona.cd4j.persistence.es4j;

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

/// <summary>
///   A strongly-typed resource class, for looking up localized strings, etc.
/// </summary>
// This class was auto-generated by the StronglyTypedResourceBuilder
// class via a tool like ResGen or Visual Studio.
// To add or remove a member, edit your .ResX file then rerun ResGen
// with the /str option, or rebuild your VS project.
//[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
//[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
class ExceptionMessagesDesigner { // internal

        private static ResourceManager resourceMan;
        private static CultureInfo resourceCulture;
        
        //[global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        private ExceptionMessagesDesigner() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        //[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static getResourceManager ResourceManager() {
                if (object.ReferenceEquals(resourceMan, null)) {
                    ResourceManager temp = new ResourceManager("CommonDomain.Persistence.EventStore.ExceptionMessages", typeof(ExceptionMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        //[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static CultureInfo getCulture() {
            return resourceCulture;
        }

        public static void setCultureInfo(CultureInfo resourceCulture) {
                this.resourceCulture = resourceCulture;
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The command issued conflicted with another command that was sent by another user, actor, or process in the system.  The change could not be automatically merged.  Please review the data that has changed and try your change again..
        /// </summary>
        public static String getConflictingCommand() {
                return ResourceManager.GetString("ConflictingCommand", resourceCulture);
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There were no uncommitted changes to persist.  When attempting to save an aggregate there must be at least one uncommitted event to persist..
        /// </summary>
        public static String getNoWork() {
                return ResourceManager.GetString("NoWork", resourceCulture);
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument cannot be null..
        /// </summary>
        public static String gitNullArgument() {
                return ResourceManager.GetString("NullArgument", resourceCulture);
        }
    
}
